@startuml
left to right direction
package "SOFTDEV-RED-RICE" {
    class "<<Application>>\nServer" as Server {}

    class "<<Representation>>\nUser Model" as UserModel {
        +String name
        +String email
        +String telephone
        +String role
        +String password
        +DateTime createdAt
    }

    class "<<Representation>>\nRestaurant Model" as RestaurantModel {
        +String name
        +String address
        +String telephone_number
        +DateTime open_time
        +DateTime close_time
        +Number table_available
        +String image
        +DateTime createdAt
    }

    class "<<Representation>>\nReservation Model" as ReservationModel {
        +Date dateTime
        +ObjectId user
        +ObjectId restaurant
        +Enum String status
        +DateTime createdAt
    }

    class "<<Resource>>\nAuth" as AuthController {
        <<POST>> +login(): Token
        <<POST>> +register(): Token
        <<GET>> +getme(): User
        <<GET>> +logout(): void
    }

    class "<<Resource>>\nReservation" as ReservationController {
        <<POST>> +createReservation(): Reservation  
        <<GET>> +getReservations(): Reservation[]
        <<GET>> +getReservation(id): Reservation
        <<PUT>> +updateReservation(id): Reservation
        <<DELETE>> +deleteReservation(id): void
        <<PUT>> +updateReservationStatus(id, status): Reservation
    }

    class "<<Resource>>\nRestaurant" as RestaurantController {
        <<POST>> +createRestaurant(): Restaurant
        <<GET>> +getRestaurants(): Restaurant[]
        <<GET>> +getRestaurant(id): Restaurant
        <<PUT>> +updateRestaurant(id): Restaurant
        <<DELETE>> +deleteRestaurant(id): void
        <<GET>> +getRestaurantImage(id): Image
    }

    class "<<Resource>>\nAuth Middleware" as AuthMiddleware {
        +verifyToken()
        +protect()
        +authorize(roles)
    }

    class "<<Resource>>\nError Handler Middleware" as ErrorHandlerMiddleware {
        +errorHandler()
    }

    class "<<Resource>>\nCount User Table Utility" as CountUserTable {
        +countUserTable()
    }
}

Server ..> AuthController : "/auth\n<<Path>>"
Server ..> ReservationController : "/reservations\n<<Path>>"
Server ..> RestaurantController : "/restaurants\n<<Path>>"

AuthController ..> AuthMiddleware : "uses"
ErrorHandlerMiddleware ..> Server : "used by"
AuthMiddleware ..> UserModel : "verifies user"

ReservationController ..> ReservationModel : "manages"
ReservationController ..> CountUserTable : "utilize"
RestaurantController ..> RestaurantModel : "manages"

@enduml
